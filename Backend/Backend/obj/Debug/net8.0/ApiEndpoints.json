[
  {
    "ContainingType": "Backend.Controllers.authentication.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Backend.Models.DTO.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.authentication.AuthController",
    "Method": "Logout",
    "RelativePath": "api/auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.authentication.AuthController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/auth/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.authentication.AuthController",
    "Method": "Refresh",
    "RelativePath": "api/auth/refresh",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Backend.Models.DTO.TokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.manager.UsersController",
    "Method": "GetUsers",
    "RelativePath": "api/manager",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend.Models.User, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.manager.UsersController",
    "Method": "RegisterUser",
    "RelativePath": "api/manager",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Backend.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.manager.UsersController",
    "Method": "UpdateUser",
    "RelativePath": "api/manager/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedUser",
        "Type": "Backend.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.manager.UsersController",
    "Method": "DeleteUser",
    "RelativePath": "api/manager/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.manager.DashboardController",
    "Method": "GetSummary",
    "RelativePath": "api/manager/dashboard/summary",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.manager.DashboardController",
    "Method": "GetMonthlyUserRegistrations",
    "RelativePath": "api/manager/dashboard/user-registrations/monthly",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.manager.LoansController",
    "Method": "ApproveLoan",
    "RelativePath": "api/manager/loans/{id}/approve",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.manager.LoansController",
    "Method": "RejectLoan",
    "RelativePath": "api/manager/loans/{id}/reject",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.manager.LoansController",
    "Method": "GetApprovedLoans",
    "RelativePath": "api/manager/loans/approved",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend.Controllers.manager.LoanDto, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.manager.LoansController",
    "Method": "GetLoanPdf",
    "RelativePath": "api/manager/loans/pdf/{loanId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loanId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.manager.LoansController",
    "Method": "GetPendingLoans",
    "RelativePath": "api/manager/loans/pending",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend.Controllers.manager.LoanDto, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.manager.UsersController",
    "Method": "GetCurrentProfile",
    "RelativePath": "api/manager/profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Backend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.manager.UsersController",
    "Method": "UpdateCurrentProfile",
    "RelativePath": "api/manager/profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatedUser",
        "Type": "Backend.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.LoansController",
    "Method": "CreateLoan",
    "RelativePath": "api/officer/loans/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loanDto",
        "Type": "Backend.Models.DTO.TabelaLoans",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.LoansController",
    "Method": "GetLoanById",
    "RelativePath": "api/officer/loans/find/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.LoansController",
    "Method": "GetMyLoans",
    "RelativePath": "api/officer/loans/my-loans",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.LoansController",
    "Method": "GetMyLoansCount",
    "RelativePath": "api/officer/loans/my-loans-count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.LoansController",
    "Method": "GetLoanPdf",
    "RelativePath": "api/officer/loans/pdf/{loanId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loanId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.LoansController",
    "Method": "GetLoansStatus",
    "RelativePath": "api/officer/loans/status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.SearchController",
    "Method": "DeleteUser",
    "RelativePath": "api/officer/search/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.SearchController",
    "Method": "SearchUsers",
    "RelativePath": "api/officer/search/look",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchTerm",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.SearchController",
    "Method": "UpdateUser",
    "RelativePath": "api/officer/search/update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedUser",
        "Type": "Backend.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.TransactionsController",
    "Method": "GetTransaction",
    "RelativePath": "api/officer/transactions/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Models.Transaction",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.Officer.TransactionsController",
    "Method": "GetMyTransactions",
    "RelativePath": "api/officer/transactions/my-transactions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.TransactionsController",
    "Method": "PostTransaction",
    "RelativePath": "api/officer/transactions/pay",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Backend.Models.DTO.Transactiontabel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Models.Transaction",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.Officer.TransactionsController",
    "Method": "GetTotalSentAmount",
    "RelativePath": "api/officer/transactions/total-sent-amount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.TransactionsController",
    "Method": "GetTransactionCount",
    "RelativePath": "api/officer/transactions/transaction-count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/officer/user/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Backend.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.Officer.UserController",
    "Method": "GetUser",
    "RelativePath": "api/officer/user/take/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.Officer.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/officer/user/update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedUser",
        "Type": "Backend.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.user.TransactionsController",
    "Method": "GetMyTransactions",
    "RelativePath": "api/user/transactions/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.user.TransactionsController",
    "Method": "GetMyTransaction",
    "RelativePath": "api/user/transactions/me/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.user.TransactionsController",
    "Method": "GetMyMonthlyExpense",
    "RelativePath": "api/user/transactions/me/monthly-expense",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.user.TransactionsController",
    "Method": "Transfer",
    "RelativePath": "api/user/transactions/transfer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "req",
        "Type": "Backend.Models.DTO.TransferRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.user.UsersController",
    "Method": "RegisterUser",
    "RelativePath": "api/users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Backend.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.user.UsersController",
    "Method": "GetMyBalance",
    "RelativePath": "api/users/balance",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.user.UsersController",
    "Method": "GetMyProfile",
    "RelativePath": "api/users/profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Backend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Controllers.user.UsersController",
    "Method": "UpdateMyProfile",
    "RelativePath": "api/users/profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "phone",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "address",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "dateOfBirth",
        "Type": "System.Nullable\u00601[[System.DateOnly, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.user.UsersController",
    "Method": "GetMySpendingLimit",
    "RelativePath": "api/users/spending-limit",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend.WeatherForecast, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]